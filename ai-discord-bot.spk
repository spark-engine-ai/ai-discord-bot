{"flow":{"edges":[{"id":"edge_246c4911-4601-4e07-b38f-b6f3e565266d","type":"baseEdge","source":"node_1737785833246_0.4801137567356579","target":"node_1738585560896_0.14749849012893312","sourceHandle":"source","targetHandle":"target"},{"id":"edge_b9d1d265-12b6-4405-990c-39798090acb4","type":"baseEdge","source":"node_1738585560896_0.14749849012893312","target":"node_1738585638832_0.6785478823549926","sourceHandle":"source","targetHandle":"target"},{"id":"edge_e0d9d3db-19f3-4241-915b-a8b9ff2fa6c8","type":"baseEdge","source":"node_1738585688071_0.2136675894226423","target":"node_1738585807991_0.5487113618292507","sourceHandle":"source","targetHandle":"target"},{"id":"edge_4f4f1f23-3609-41ce-92df-f4eb2ad11b21","type":"baseEdge","source":"node_1738585847280_0.6838047219459011","target":"node_1738586069680_0.7067656171604435","sourceHandle":"source","targetHandle":"target"},{"id":"edge_2992564c-6d0b-4e19-93eb-0012e91d81fd","type":"baseEdge","source":"node_1738586069680_0.7067656171604435","target":"node_1738586095136_0.9916087469545325","sourceHandle":"source","targetHandle":"second-one-target"},{"id":"edge_011209b9-5c53-4975-8791-02e4b262c767","type":"baseEdge","source":"node_1738586095136_0.9916087469545325","target":"node_1738586090848_0.624801622112114","sourceHandle":"source","targetHandle":"target"},{"id":"edge_7f72d9e5-53ed-4d2c-8650-215b835ba6f7","type":"baseEdge","source":"node_1738586151361_0.7114404146479745","target":"node_1738586095136_0.9916087469545325","sourceHandle":"source","targetHandle":"second-two-target"},{"id":"edge_f5f1eacd-f557-4348-bfc2-eef5a23f95a9","type":"baseEdge","source":"node_1738586090848_0.624801622112114","target":"node_1738586246311_0.03932281528527537","sourceHandle":"source","targetHandle":"target"},{"id":"edge_3da007da-38a5-426b-bbda-1b647cffa83c","type":"baseEdge","source":"node_1738585584400_0.7178022966662212","target":"node_1738585665760_0.6566661656904407","sourceHandle":"source","targetHandle":"target"},{"id":"edge_8a685802-ebd5-4480-a6bd-5101685c783d","type":"baseEdge","source":"node_1722881042587_0.9224432518755226","target":"node_1739398287613_0.8441320156004377","sourceHandle":"source","targetHandle":"target"},{"id":"edge_a336ce21-4a5e-43ec-8679-6b0e67f6e16e","type":"baseEdge","source":"node_1739398287613_0.8441320156004377","target":"node_1739400631486_0.13562682979016372","sourceHandle":"condition-1-source","targetHandle":"target"},{"id":"edge_099af3ad-fd4a-4e1c-bc4a-6fef2806c94e","type":"baseEdge","source":"node_1739398287613_0.8441320156004377","target":"node_1739400694324_0.9584736643303158","sourceHandle":"condition-2-source","targetHandle":"target"},{"id":"edge_4804f99f-ed69-4d6a-ab68-0449ae2a6e8c","type":"baseEdge","source":"node_1739400631486_0.13562682979016372","target":"node_1738585688071_0.2136675894226423","sourceHandle":"source","targetHandle":"target"},{"id":"edge_2f1d6875-31c0-4f9a-9cee-3f3a26ab07e0","type":"baseEdge","source":"node_1739400694324_0.9584736643303158","target":"node_1737785826937_0.1866964342684303","sourceHandle":"source","targetHandle":"target"},{"id":"edge_da24b789-3710-43f6-9d47-6b6580a444c0","type":"baseEdge","source":"node_1737785826937_0.1866964342684303","target":"node_1738585584400_0.7178022966662212","sourceHandle":"source","targetHandle":"target"},{"id":"edge_2d1b5b04-ceb6-4f29-91da-158ecb091525","type":"baseEdge","source":"node_1739398287613_0.8441320156004377","target":"node_1739400745435_0.027661373422064095","sourceHandle":"condition-3-source","targetHandle":"target"},{"id":"edge_63f15c0d-247d-494e-b5fe-7867cb04276f","type":"baseEdge","source":"node_1739398287613_0.8441320156004377","target":"node_1739400756576_0.479416397234403","sourceHandle":"condition-4-source","targetHandle":"target"},{"id":"edge_4ca15553-1b19-46c4-83ae-e566aa131162","type":"baseEdge","source":"node_1739400756576_0.479416397234403","target":"node_1738586151361_0.7114404146479745","sourceHandle":"source","targetHandle":"target"},{"id":"edge_1f348a88-0d07-4cc6-bd39-076a6790f5a3","type":"baseEdge","source":"node_1739400756576_0.479416397234403","target":"node_1738585847280_0.6838047219459011","sourceHandle":"source","targetHandle":"target"},{"id":"edge_a7bcbb61-69de-42b5-8e16-36dbbad8b2b9","type":"baseEdge","source":"node_1739400745435_0.027661373422064095","target":"node_1737785833246_0.4801137567356579","sourceHandle":"source","targetHandle":"target"},{"id":"edge_2ca30838-5d79-4b0f-9b06-c54deb7925f1","type":"baseEdge","source":"node_1739398287613_0.8441320156004377","target":"node_1739743519401_0.2509102051842378","sourceHandle":"condition-5-source","targetHandle":"target"},{"id":"edge_275fe520-3d62-4bc5-a039-392e2d2b8480","type":"baseEdge","source":"node_1739743519401_0.2509102051842378","target":"node_1739743717343_0.59510154798464","sourceHandle":"source","targetHandle":"target"},{"id":"edge_9cae73f5-31cf-4140-878a-bad815642659","type":"baseEdge","source":"node_1739743717343_0.59510154798464","target":"node_1739743622225_0.5117856268459744","sourceHandle":"condition-1-source","targetHandle":"target"},{"id":"edge_cdf6c3e0-f63a-45ff-a7b3-efb9eb59d925","type":"baseEdge","source":"node_1739743622225_0.5117856268459744","target":"node_1739743653618_0.30723950393773714","sourceHandle":"source","targetHandle":"target"},{"id":"edge_41facbf8-3ea5-4d74-8e61-31b3c04cf2ec","type":"baseEdge","source":"node_1739743717343_0.59510154798464","target":"node_1739743781248_0.3212029630931401","sourceHandle":"source","targetHandle":"target"},{"id":"edge_5dd0bf1b-aeca-409a-8d71-0012303548ff","type":"baseEdge","source":"node_1739743781248_0.3212029630931401","target":"node_1739743770874_0.5914795527999606","sourceHandle":"source","targetHandle":"target"},{"id":"edge_e655737a-918f-450c-9dd4-7d463b156239","type":"baseEdge","source":"node_1739743653618_0.30723950393773714","target":"node_1739743858465_0.7930812821220397","sourceHandle":"source","targetHandle":"target"},{"id":"edge_dc14a887-4b63-4d33-86c2-f2b2bf7029ff","type":"baseEdge","source":"node_1739743770874_0.5914795527999606","target":"node_1739743848698_0.621607687108551","sourceHandle":"source","targetHandle":"target"},{"id":"edge_03465f16-c961-4a1a-878e-a05ef308d49c","type":"baseEdge","source":"node_1739398287613_0.8441320156004377","target":"node_1739743966191_0.2552461232417125","sourceHandle":"source","targetHandle":"target"},{"id":"edge_67d04bf1-cb4e-41eb-8117-e4386c21b740","type":"baseEdge","source":"node_1739743966191_0.2552461232417125","target":"node_1739743961073_0.8408005328226269","sourceHandle":"source","targetHandle":"target"},{"id":"edge_ff888adc-e079-4e60-b7f3-a0528cf70bc8","type":"baseEdge","source":"node_1739743961073_0.8408005328226269","target":"node_1739398598821_0.9691920984692806","sourceHandle":"source","targetHandle":"target"}],"nodes":[{"id":"node_1722881042587_0.9224432518755226","data":{"text":"","text2":"","title":"Input","config":{"props":[],"connectedFrom":[]},"companion_id":"","companion_pfp":""},"type":"input","style":{"border":"1px solid #777","background":"transparent"},"width":150,"height":118,"dragging":false,"position":{"x":-4600,"y":-500},"selected":false,"positionAbsolute":{"x":-4600,"y":-500}},{"id":"node_1737785826937_0.1866964342684303","data":{"id":"node_1737785826937_0.1866964342684303","title":"Agent","config":{"icon":"IconMessageDots","type":"agent","image":"/nodes/icons/agent.png","props":[{"name":"textbox","type":"textbox","label":"Instructions","value":"Enter what to do with the input"},{"name":"taskType","type":"dropdown","label":"Model","value":"openai/dall-e-3-hd","options":["Gryphe/MythoMax-L2-13b","NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO","Qwen/Qwen2.5-Coder-32B-Instruct","Qwen/Qwen2.5-7B-Instruct-Turbo","Qwen/Qwen2.5-72B-Instruct-Turbo","Qwen/Qwen2-72B-Instruct","Qwen/Qwen1.5-72B-Chat","anthropic/claude-3-5-sonnet-latest","anthropic/claude-3-5-haiku-latest","anthropic/claude-3-5-opus-latest","anthropic/claude-3-sonnet-latest","anthropic/claude-3-haiku-latest","anthropic/claude-3-opus-latest","codellama/CodeLlama-34b-Instruct-hf","databricks/dbrx-instruct","deepseek-ai/deepseek-llm-67b-chat","deepseek-ai/DeepSeek-R1","google/gemma-7b-it","google/gemma2-9b-it","google/gemma-2-27b-it","google/gemma-2b-it","meta-llama/Llama-2-7b-chat-hf","meta-llama/llama-3.3-70b-versatile","meta-llama/llama-3.1-8b-instant","meta-llama/llama-3.1-70b-cerebras","meta-llama/llama-3.1-8b-cerebras","meta-llama/llama-3.2-1b-preview","meta-llama/llama-3.2-3b-preview","meta-llama/Llama-2-70b-hf","meta-llama/Meta-Llama-3-8B-Instruct-Lite","meta-llama/Meta-Llama-3-70B-Instruct-Lite","meta-llama/Llama-3-8b-chat-hf","meta-llama/Llama-3-70b-chat-hf","meta-llama/Llama-2-13b-chat-hf","meta-llama/llama-guard-3-8b","meta-llama/Llama-2-13b-chat-hf","microsoft/WizardLM-2-8x22B","mistralai/mixtral-8x7b-32768","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","minimax/audio-01","minimax/video-01","mistralai/Mixtral-8x22B-Instruct-v0.1","mistralai/Mistral-7B-v0.1","mistralai/Mixtral-8x7B-v0.1","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mixtral-8x22B-Instruct-v0.1","nvidia/Llama-3.1-Nemotron-70B-Instruct-HF","openai/gpt-3.5-turbo","openai/gpt-3.5-turbo-16k","openai/gpt-4-turbo","openai/gpt-4o","openai/gpt-4o-mini","openai/gpt-4o-tiny-output","sparkengine/charlottes-web","sparkengine/charlottes-web-large","sparkengine/charlottes-web-xl","sparkengine/Charlottes-Page-2.1","togethercomputer/StripedHyena-Nous-7B","upstage/SOLAR-10.7B-Instruct-v1.0","prompthero/openjourney","runwayml/stable-diffusion-v1-5","SG161222/Realistic_Vision_V3.0_VAE","stabilityai/stable-diffusion-2-1","stabilityai/stable-diffusion-xl-base-1.0","wavymulder/Analog-Diffusion","meshy/text-to-3d-enhanced","meshy/text-to-voxel-enhanced","meshy/text-to-voxel-2v-enhanced","meshy/text-to-voxel-4v-enhanced","meshy/text-to-voxel-8v-enhanced","openai/dall-e-3","openai/dall-e-3-hd","sparkengine/Llama3.3-70b-GTR","sparkengine/Charlottes-Web-2.1","sparkengine/Charlottes-Web-2.1-Lite","sparkengine/Charlottes-Page-2.1"]},{"name":"inputBorderColor","type":"color","label":"Color Input","value":"rgba(255, 176, 221, 0.69)"},{"name":"extraProps","type":"group","label":"Extras","props":[{"name":"divider","type":"divider","label":"divider","value":""},{"name":"outputCheckbox","type":"checkbox","label":"Output as object","value":false},{"name":"outputArray","type":"array","label":"Output Structure:","value":[]},{"name":"divider2","type":"divider","label":"divider","value":""},{"name":"inputCheckbox","type":"checkbox","label":"Extract values from input","value":false},{"name":"inputArray","type":"extract","label":"Values to Extract:","value":[]},{"name":"divider3","type":"divider","label":"divider","value":""},{"name":"cutCodeCheckbox","type":"checkbox","label":"Cut Code from Output","value":false}]}],"title":"Image generator","category":"prompt","videoUrl":"/videos/nodes/video.mp4","iconImage":"/nodes/icons/agent.png","description":"The \"Agent\" node is a versatile tool for interacting with various Large Language Models (LLMs). It processes user input and generates AI responses based on the selected model and configuration.\n\n### Features and Properties:\n\n1. **Instructions (Textbox):**  \n   - Provides specific instructions or a prompt to guide the model's behavior.\n   - **Input:** A string, e.g., \"Summarize the input in one sentence.\"  \n   - **Default Value:** \"Enter what to do with the input\"\n\n2. **Model (Dropdown):**  \n   - Allows selection of a pre-configured LLM from an extensive list.  \n   - **Input:** A single string or an array of strings specifying the model(s), e.g., [\"openai/gpt-3.5-turbo\"]  \n   - **Default Value:** [\"openai/gpt-3.5-turbo\"]\n\n3. **Color Input:**  \n   - Sets a custom border color for the input visualization.  \n   - **Input:** A string in RGBA format, e.g., \"rgba(255,255,255,1)\"  \n   - **Default Value:** \"rgba(255,255,255)\"\n\n4. **Extras (Group):**  \n   Additional configurable properties:  \n   - **Output as Object (Checkbox):** Returns the result in object format if enabled.  \n     - **Default:** false  \n   - **Output Structure (Array):** Specifies the structure of the output object.  \n     - **Input:** An array of key-value pairs. Example:  \n       [\n         { \"key\": \"summary\", \"value\": \"A brief summary of the input\" }\n       ]  \n     - **Default Value:** []\n   - **Extract Values from Input (Checkbox):** Extracts specified values from the input data.  \n     - **Default:** false  \n   - **Values to Extract (Extract):** Defines which keys to extract if the above is enabled.  \n     - **Input:** An array of keys to extract, e.g., [\"name\", \"age\"]  \n     - **Default Value:** []\n   - **Cut Code from Output (Checkbox):** Removes code snippets (formatted as markdown code blocks) from the output.  \n     - **Default:** false\n\n### Processing:\n1. **Input:** A string containing the text to process. Example:  \n   \"What are the key points of this document?\"\n2. **Output:** A string or object (depending on configuration), e.g.,  \n   {\n     \"summary\": \"The document discusses key points about AI development.\"\n   }\n","connectedFrom":["node_1739398287613_0.8441320156004377"],"useModalLibrary":true},"fileName":"newPromptNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":313,"dragging":false,"position":{"x":-3260,"y":-700},"selected":false,"positionAbsolute":{"x":-3260,"y":-700}},{"id":"node_1737785833246_0.4801137567356579","data":{"id":"node_1737785833246_0.4801137567356579","title":"Agent","config":{"icon":"IconMessageDots","type":"agent","image":"/nodes/icons/agent.png","props":[{"name":"textbox","type":"textbox","label":"Instructions","value":"Enter what to do with the input"},{"name":"taskType","type":"dropdown","label":"Model","value":"minimax/video-01","options":["Gryphe/MythoMax-L2-13b","NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO","Qwen/Qwen2.5-Coder-32B-Instruct","Qwen/Qwen2.5-7B-Instruct-Turbo","Qwen/Qwen2.5-72B-Instruct-Turbo","Qwen/Qwen2-72B-Instruct","Qwen/Qwen1.5-72B-Chat","anthropic/claude-3-5-sonnet-latest","anthropic/claude-3-5-haiku-latest","anthropic/claude-3-5-opus-latest","anthropic/claude-3-sonnet-latest","anthropic/claude-3-haiku-latest","anthropic/claude-3-opus-latest","codellama/CodeLlama-34b-Instruct-hf","databricks/dbrx-instruct","deepseek-ai/deepseek-llm-67b-chat","deepseek-ai/DeepSeek-R1","google/gemma-7b-it","google/gemma2-9b-it","google/gemma-2-27b-it","google/gemma-2b-it","meta-llama/Llama-2-7b-chat-hf","meta-llama/llama-3.3-70b-versatile","meta-llama/llama-3.1-8b-instant","meta-llama/llama-3.1-70b-cerebras","meta-llama/llama-3.1-8b-cerebras","meta-llama/llama-3.2-1b-preview","meta-llama/llama-3.2-3b-preview","meta-llama/Llama-2-70b-hf","meta-llama/Meta-Llama-3-8B-Instruct-Lite","meta-llama/Meta-Llama-3-70B-Instruct-Lite","meta-llama/Llama-3-8b-chat-hf","meta-llama/Llama-3-70b-chat-hf","meta-llama/Llama-2-13b-chat-hf","meta-llama/llama-guard-3-8b","minimax/audio-01","minimax/video-01","meta-llama/Llama-2-13b-chat-hf","microsoft/WizardLM-2-8x22B","mistralai/mixtral-8x7b-32768","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x22B-Instruct-v0.1","mistralai/Mistral-7B-v0.1","mistralai/Mixtral-8x7B-v0.1","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mixtral-8x22B-Instruct-v0.1","nvidia/Llama-3.1-Nemotron-70B-Instruct-HF","openai/gpt-3.5-turbo","openai/gpt-3.5-turbo-16k","openai/gpt-4-turbo","openai/gpt-4o","openai/gpt-4o-mini","openai/gpt-4o-tiny-output","sparkengine/charlottes-web","sparkengine/charlottes-web-large","sparkengine/charlottes-web-xl","sparkengine/Charlottes-Page-2.1","togethercomputer/StripedHyena-Nous-7B","upstage/SOLAR-10.7B-Instruct-v1.0","prompthero/openjourney","runwayml/stable-diffusion-v1-5","SG161222/Realistic_Vision_V3.0_VAE","stabilityai/stable-diffusion-2-1","stabilityai/stable-diffusion-xl-base-1.0","wavymulder/Analog-Diffusion","meshy/text-to-3d-enhanced","meshy/text-to-voxel-enhanced","meshy/text-to-voxel-2v-enhanced","meshy/text-to-voxel-4v-enhanced","meshy/text-to-voxel-8v-enhanced","openai/dall-e-3","openai/dall-e-3-hd","sparkengine/Llama3.3-70b-GTR","sparkengine/Charlottes-Web-2.1","sparkengine/Charlottes-Web-2.1-Lite","sparkengine/Charlottes-Page-2.1"]},{"name":"inputBorderColor","type":"color","label":"Color Input","value":"rgba(144, 130, 250, 0.7)"},{"name":"extraProps","type":"group","label":"Extras","props":[{"name":"divider","type":"divider","label":"divider","value":""},{"name":"outputCheckbox","type":"checkbox","label":"Output as object","value":false},{"name":"outputArray","type":"array","label":"Output Structure:","value":[]},{"name":"divider2","type":"divider","label":"divider","value":""},{"name":"inputCheckbox","type":"checkbox","label":"Extract values from input","value":false},{"name":"inputArray","type":"extract","label":"Values to Extract:","value":[]},{"name":"divider3","type":"divider","label":"divider","value":""},{"name":"cutCodeCheckbox","type":"checkbox","label":"Cut Code from Output","value":false}]}],"title":"Video Generator","category":"prompt","videoUrl":"/videos/nodes/video.mp4","iconImage":"/nodes/icons/agent.png","description":"The \"Agent\" node is a versatile tool for interacting with various Large Language Models (LLMs). It processes user input and generates AI responses based on the selected model and configuration.\n\n### Features and Properties:\n\n1. **Instructions (Textbox):**  \n   - Provides specific instructions or a prompt to guide the model's behavior.\n   - **Input:** A string, e.g., \"Summarize the input in one sentence.\"  \n   - **Default Value:** \"Enter what to do with the input\"\n\n2. **Model (Dropdown):**  \n   - Allows selection of a pre-configured LLM from an extensive list.  \n   - **Input:** A single string or an array of strings specifying the model(s), e.g., [\"openai/gpt-3.5-turbo\"]  \n   - **Default Value:** [\"openai/gpt-3.5-turbo\"]\n\n3. **Color Input:**  \n   - Sets a custom border color for the input visualization.  \n   - **Input:** A string in RGBA format, e.g., \"rgba(255,255,255,1)\"  \n   - **Default Value:** \"rgba(255,255,255)\"\n\n4. **Extras (Group):**  \n   Additional configurable properties:  \n   - **Output as Object (Checkbox):** Returns the result in object format if enabled.  \n     - **Default:** false  \n   - **Output Structure (Array):** Specifies the structure of the output object.  \n     - **Input:** An array of key-value pairs. Example:  \n       [\n         { \"key\": \"summary\", \"value\": \"A brief summary of the input\" }\n       ]  \n     - **Default Value:** []\n   - **Extract Values from Input (Checkbox):** Extracts specified values from the input data.  \n     - **Default:** false  \n   - **Values to Extract (Extract):** Defines which keys to extract if the above is enabled.  \n     - **Input:** An array of keys to extract, e.g., [\"name\", \"age\"]  \n     - **Default Value:** []\n   - **Cut Code from Output (Checkbox):** Removes code snippets (formatted as markdown code blocks) from the output.  \n     - **Default:** false\n\n### Processing:\n1. **Input:** A string containing the text to process. Example:  \n   \"What are the key points of this document?\"\n2. **Output:** A string or object (depending on configuration), e.g.,  \n   {\n     \"summary\": \"The document discusses key points about AI development.\"\n   }\n","connectedFrom":["node_1738585197921_0.7559810951717791"],"useModalLibrary":true},"fileName":"newPromptNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":313,"dragging":false,"position":{"x":-3260,"y":-280},"selected":false,"positionAbsolute":{"x":-3260,"y":-280}},{"id":"node_1738585560896_0.14749849012893312","data":{"id":"node_1738585560896_0.14749849012893312","title":"Add Text","config":{"icon":"IconTextSize","type":"add-text","props":[{"name":"textToAdd","type":"textbox","label":"Text to Add","value":"Here is your generated video as requested:\n\n"},{"name":"prepend","type":"checkbox","label":"Prepend Text","value":true}],"title":"Add Text","category":"data","videoUrl":"/videos/nodes/addtext.mp4","description":"This node adds a specified text to the input string, either at the beginning or the end, based on the state of a checkbox. It is useful for appending or prepending additional text to any input data.\n### Features:\n1. **Text to Add**: \n  - Allows you to specify the text that will be added.\n  - **Input Type**: Textbox.\n  - **Default Value**: An empty string (`\"\"`).\n    \n2. **Prepend Text**:\n  - A checkbox that determines whether the text is added at the beginning (prepended) or the end (appended).\n  - **Input Type**: Checkbox.\n  - **Default Value**: `false` (text is appended by default).\n    \n### Input/Output Structure: \n  - **Input (inputValue)**:\n  - A string containing the initial text you want to modify.\n  - **Example**: `\"Original Text\"`\n    \n  - **Output**:\n    - A string with the specified text added either at the start or end.\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is false)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Original Text\nHello\"`\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is true)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Hello\nOriginal Text\"`\n    \n### Behavior:\n  - If the input string (`inputValue`) is empty, only the `textToAdd` is returned as the result.\n    - **Example**: With `textToAdd = \"Hello\"` and an empty input, the output will be `\"Hello\"`.\n    \n  - If `prepend` is selected, the `textToAdd` will be placed before the input, separated by a newline.\n  - If `prepend` is not selected, the `textToAdd` will be placed after the input, separated by a newline.\n    ","connectedFrom":["node_1737785833246_0.4801137567356579"]},"fileName":"addTextNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":234,"dragging":false,"position":{"x":-2760,"y":-240},"selected":false,"positionAbsolute":{"x":-2760,"y":-240}},{"id":"node_1738585584400_0.7178022966662212","data":{"id":"node_1738585584400_0.7178022966662212","title":"Add Text","config":{"icon":"IconTextSize","type":"add-text","props":[{"name":"textToAdd","type":"textbox","label":"Text to Add","value":"Here is your generated image as requested:\n\n"},{"name":"prepend","type":"checkbox","label":"Prepend Text","value":true}],"title":"Add Text","category":"data","videoUrl":"/videos/nodes/addtext.mp4","description":"This node adds a specified text to the input string, either at the beginning or the end, based on the state of a checkbox. It is useful for appending or prepending additional text to any input data.\n### Features:\n1. **Text to Add**: \n  - Allows you to specify the text that will be added.\n  - **Input Type**: Textbox.\n  - **Default Value**: An empty string (`\"\"`).\n    \n2. **Prepend Text**:\n  - A checkbox that determines whether the text is added at the beginning (prepended) or the end (appended).\n  - **Input Type**: Checkbox.\n  - **Default Value**: `false` (text is appended by default).\n    \n### Input/Output Structure: \n  - **Input (inputValue)**:\n  - A string containing the initial text you want to modify.\n  - **Example**: `\"Original Text\"`\n    \n  - **Output**:\n    - A string with the specified text added either at the start or end.\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is false)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Original Text\nHello\"`\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is true)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Hello\nOriginal Text\"`\n    \n### Behavior:\n  - If the input string (`inputValue`) is empty, only the `textToAdd` is returned as the result.\n    - **Example**: With `textToAdd = \"Hello\"` and an empty input, the output will be `\"Hello\"`.\n    \n  - If `prepend` is selected, the `textToAdd` will be placed before the input, separated by a newline.\n  - If `prepend` is not selected, the `textToAdd` will be placed after the input, separated by a newline.\n    ","connectedFrom":["node_1737785826937_0.1866964342684303"]},"fileName":"addTextNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":234,"dragging":false,"position":{"x":-2760,"y":-620},"selected":false,"positionAbsolute":{"x":-2760,"y":-620}},{"id":"node_1738585638832_0.6785478823549926","data":{"id":"node_1738585638832_0.6785478823549926","text":"","text2":"","title":"Response (video)","config":{"props":[],"connectedFrom":["node_1738585560896_0.14749849012893312"]},"companion_id":"","companion_pfp":""},"type":"outputPassNode","style":{"border":"1px solid #777","background":"transparent"},"width":204,"height":82,"dragging":false,"position":{"x":-2300,"y":-180},"selected":false,"positionAbsolute":{"x":-2300,"y":-180}},{"id":"node_1738585665760_0.6566661656904407","data":{"id":"node_1738585638832_0.6785478823549926","text":"","text2":"","title":"Response (image)","config":{"props":[],"connectedFrom":["node_1738585584400_0.7178022966662212"]},"companion_id":"","companion_pfp":""},"type":"outputPassNode","style":{"border":"1px solid #777","background":"transparent"},"width":204,"height":82,"dragging":false,"position":{"x":-2300,"y":-560},"selected":false,"positionAbsolute":{"x":-2300,"y":-560}},{"id":"node_1738585688071_0.2136675894226423","data":{"id":"node_1738585688071_0.2136675894226423","title":"Agent","config":{"icon":"IconMessageDots","type":"agent","image":"/nodes/icons/agent.png","props":[{"name":"textbox","type":"textbox","label":"Instructions","value":"You are Mr. Spark, a helpful AI bot powered by Spark Engine. You can search the web, generate images and videos\n\nIf the user greets you (e.g., \"hello,\" \"hi,\" \"hey\"), respond warmly and ask if they’d like to perform an action, listing the available commands.\nIf the user asks for commands or help, provide a clear list of what you can do.\nOtherwise, respond naturally to their request, keeping replies conversational and informative.\nIf they ask for more info about what you do, explain your capabilities in a friendly and helpful manner.\n\nAvailable Commands:\n\n/chat – Have a conversation with Mr. Spark.\n/search – Search the web for information.\n/image – Generate an AI-powered image.\n/video – Generate an AI-powered video.\n\nIf unsure, just ask! Mr. Spark is here to help. 🚀"},{"name":"taskType","type":"dropdown","label":"Model","value":"google/gemma2-9b-it","options":["Gryphe/MythoMax-L2-13b","NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO","Qwen/Qwen2.5-Coder-32B-Instruct","Qwen/Qwen2.5-7B-Instruct-Turbo","Qwen/Qwen2.5-72B-Instruct-Turbo","Qwen/Qwen2-72B-Instruct","Qwen/Qwen1.5-72B-Chat","anthropic/claude-3-5-sonnet-latest","anthropic/claude-3-5-haiku-latest","anthropic/claude-3-5-opus-latest","anthropic/claude-3-sonnet-latest","anthropic/claude-3-haiku-latest","anthropic/claude-3-opus-latest","codellama/CodeLlama-34b-Instruct-hf","databricks/dbrx-instruct","deepseek-ai/deepseek-llm-67b-chat","deepseek-ai/DeepSeek-R1","google/gemma-7b-it","google/gemma2-9b-it","google/gemma-2-27b-it","google/gemma-2b-it","meta-llama/Llama-2-7b-chat-hf","meta-llama/llama-3.3-70b-versatile","meta-llama/llama-3.1-8b-instant","meta-llama/llama-3.1-70b-cerebras","meta-llama/llama-3.1-8b-cerebras","meta-llama/llama-3.2-1b-preview","meta-llama/llama-3.2-3b-preview","meta-llama/Llama-2-70b-hf","meta-llama/Meta-Llama-3-8B-Instruct-Lite","meta-llama/Meta-Llama-3-70B-Instruct-Lite","meta-llama/Llama-3-8b-chat-hf","meta-llama/Llama-3-70b-chat-hf","meta-llama/Llama-2-13b-chat-hf","meta-llama/llama-guard-3-8b","meta-llama/Llama-2-13b-chat-hf","microsoft/WizardLM-2-8x22B","mistralai/mixtral-8x7b-32768","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x22B-Instruct-v0.1","mistralai/Mistral-7B-v0.1","mistralai/Mixtral-8x7B-v0.1","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mixtral-8x22B-Instruct-v0.1","nvidia/Llama-3.1-Nemotron-70B-Instruct-HF","openai/gpt-3.5-turbo","openai/gpt-3.5-turbo-16k","openai/gpt-4-turbo","openai/gpt-4o","openai/gpt-4o-mini","openai/gpt-4o-tiny-output","sparkengine/charlottes-web","sparkengine/charlottes-web-large","sparkengine/charlottes-web-xl","sparkengine/Charlottes-Page-2.1","togethercomputer/StripedHyena-Nous-7B","upstage/SOLAR-10.7B-Instruct-v1.0","prompthero/openjourney","runwayml/stable-diffusion-v1-5","SG161222/Realistic_Vision_V3.0_VAE","stabilityai/stable-diffusion-2-1","stabilityai/stable-diffusion-xl-base-1.0","wavymulder/Analog-Diffusion","meshy/text-to-3d-enhanced","meshy/text-to-voxel-enhanced","meshy/text-to-voxel-2v-enhanced","meshy/text-to-voxel-4v-enhanced","meshy/text-to-voxel-8v-enhanced","openai/dall-e-3","openai/dall-e-3-hd","sparkengine/Llama3.3-70b-GTR","sparkengine/Charlottes-Web-2.1","sparkengine/Charlottes-Web-2.1-Lite","sparkengine/Charlottes-Page-2.1","minimax/audio-01"]},{"name":"inputBorderColor","type":"color","label":"Color Input","value":"rgba(62, 184, 35, 0.7)"},{"name":"extraProps","type":"group","label":"Extras","props":[{"name":"divider","type":"divider","label":"divider","value":""},{"name":"outputCheckbox","type":"checkbox","label":"Output as object","value":false},{"name":"outputArray","type":"array","label":"Output Structure:","value":[]},{"name":"divider2","type":"divider","label":"divider","value":""},{"name":"inputCheckbox","type":"checkbox","label":"Extract values from input","value":false},{"name":"inputArray","type":"extract","label":"Values to Extract:","value":[]},{"name":"divider3","type":"divider","label":"divider","value":""},{"name":"cutCodeCheckbox","type":"checkbox","label":"Cut Code from Output","value":false}]}],"title":"Chatbot","category":"prompt","videoUrl":"/videos/nodes/video.mp4","iconImage":"/nodes/icons/agent.png","description":"The \"Agent\" node is a versatile tool for interacting with various Large Language Models (LLMs). It processes user input and generates AI responses based on the selected model and configuration.\n\n### Features and Properties:\n\n1. **Instructions (Textbox):**  \n   - Provides specific instructions or a prompt to guide the model's behavior.\n   - **Input:** A string, e.g., \"Summarize the input in one sentence.\"  \n   - **Default Value:** \"Enter what to do with the input\"\n\n2. **Model (Dropdown):**  \n   - Allows selection of a pre-configured LLM from an extensive list.  \n   - **Input:** A single string or an array of strings specifying the model(s), e.g., [\"openai/gpt-3.5-turbo\"]  \n   - **Default Value:** [\"openai/gpt-3.5-turbo\"]\n\n3. **Color Input:**  \n   - Sets a custom border color for the input visualization.  \n   - **Input:** A string in RGBA format, e.g., \"rgba(255,255,255,1)\"  \n   - **Default Value:** \"rgba(255,255,255)\"\n\n4. **Extras (Group):**  \n   Additional configurable properties:  \n   - **Output as Object (Checkbox):** Returns the result in object format if enabled.  \n     - **Default:** false  \n   - **Output Structure (Array):** Specifies the structure of the output object.  \n     - **Input:** An array of key-value pairs. Example:  \n       [\n         { \"key\": \"summary\", \"value\": \"A brief summary of the input\" }\n       ]  \n     - **Default Value:** []\n   - **Extract Values from Input (Checkbox):** Extracts specified values from the input data.  \n     - **Default:** false  \n   - **Values to Extract (Extract):** Defines which keys to extract if the above is enabled.  \n     - **Input:** An array of keys to extract, e.g., [\"name\", \"age\"]  \n     - **Default Value:** []\n   - **Cut Code from Output (Checkbox):** Removes code snippets (formatted as markdown code blocks) from the output.  \n     - **Default:** false\n\n### Processing:\n1. **Input:** A string containing the text to process. Example:  \n   \"What are the key points of this document?\"\n2. **Output:** A string or object (depending on configuration), e.g.,  \n   {\n     \"summary\": \"The document discusses key points about AI development.\"\n   }\n","connectedFrom":[],"useModalLibrary":true},"fileName":"newPromptNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":511,"dragging":false,"position":{"x":-3260,"y":-1260},"selected":false,"positionAbsolute":{"x":-3260,"y":-1260}},{"id":"node_1738585807991_0.5487113618292507","data":{"id":"node_1738585638832_0.6785478823549926","text":"","text2":"","title":"Response","config":{"props":[],"connectedFrom":["node_1738585688071_0.2136675894226423"]},"companion_id":"","companion_pfp":""},"type":"outputPassNode","style":{"border":"1px solid #777","background":"transparent"},"width":204,"height":82,"dragging":false,"position":{"x":-2700,"y":-1200},"selected":false,"positionAbsolute":{"x":-2700,"y":-1200}},{"id":"node_1738585847280_0.6838047219459011","data":{"id":"node_1738585847280_0.6838047219459011","title":"Agent","config":{"icon":"IconMessageDots","type":"agent","image":"/nodes/icons/agent.png","props":[{"name":"textbox","type":"textbox","label":"Instructions","value":"The user wants you to search the web for something. Write a search query (ONLY RETURN A SEARCH QUERY) under 10 words. This response you give will be sent directly to Bing so do not add anything other than the 10 word search query in your response"},{"name":"taskType","type":"dropdown","label":"Model","value":"google/gemma2-9b-it","options":["Gryphe/MythoMax-L2-13b","NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO","Qwen/Qwen2.5-Coder-32B-Instruct","Qwen/Qwen2.5-7B-Instruct-Turbo","Qwen/Qwen2.5-72B-Instruct-Turbo","Qwen/Qwen2-72B-Instruct","Qwen/Qwen1.5-72B-Chat","anthropic/claude-3-5-sonnet-latest","anthropic/claude-3-5-haiku-latest","anthropic/claude-3-5-opus-latest","anthropic/claude-3-sonnet-latest","anthropic/claude-3-haiku-latest","anthropic/claude-3-opus-latest","codellama/CodeLlama-34b-Instruct-hf","databricks/dbrx-instruct","deepseek-ai/deepseek-llm-67b-chat","deepseek-ai/DeepSeek-R1","google/gemma-7b-it","google/gemma2-9b-it","google/gemma-2-27b-it","google/gemma-2b-it","meta-llama/Llama-2-7b-chat-hf","meta-llama/llama-3.3-70b-versatile","meta-llama/llama-3.1-8b-instant","meta-llama/llama-3.1-70b-cerebras","meta-llama/llama-3.1-8b-cerebras","meta-llama/llama-3.2-1b-preview","meta-llama/llama-3.2-3b-preview","meta-llama/Llama-2-70b-hf","meta-llama/Meta-Llama-3-8B-Instruct-Lite","meta-llama/Meta-Llama-3-70B-Instruct-Lite","meta-llama/Llama-3-8b-chat-hf","meta-llama/Llama-3-70b-chat-hf","meta-llama/Llama-2-13b-chat-hf","meta-llama/llama-guard-3-8b","meta-llama/Llama-2-13b-chat-hf","microsoft/WizardLM-2-8x22B","mistralai/mixtral-8x7b-32768","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x22B-Instruct-v0.1","mistralai/Mistral-7B-v0.1","mistralai/Mixtral-8x7B-v0.1","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mixtral-8x22B-Instruct-v0.1","nvidia/Llama-3.1-Nemotron-70B-Instruct-HF","openai/gpt-3.5-turbo","openai/gpt-3.5-turbo-16k","openai/gpt-4-turbo","openai/gpt-4o","openai/gpt-4o-mini","openai/gpt-4o-tiny-output","sparkengine/charlottes-web","sparkengine/charlottes-web-large","sparkengine/charlottes-web-xl","sparkengine/Charlottes-Page-2.1","togethercomputer/StripedHyena-Nous-7B","upstage/SOLAR-10.7B-Instruct-v1.0","prompthero/openjourney","runwayml/stable-diffusion-v1-5","SG161222/Realistic_Vision_V3.0_VAE","stabilityai/stable-diffusion-2-1","stabilityai/stable-diffusion-xl-base-1.0","wavymulder/Analog-Diffusion","meshy/text-to-3d-enhanced","meshy/text-to-voxel-enhanced","meshy/text-to-voxel-2v-enhanced","meshy/text-to-voxel-4v-enhanced","meshy/text-to-voxel-8v-enhanced","openai/dall-e-3","openai/dall-e-3-hd","sparkengine/Llama3.3-70b-GTR","sparkengine/Charlottes-Web-2.1","sparkengine/Charlottes-Web-2.1-Lite","sparkengine/Charlottes-Page-2.1","minimax/audio-01"]},{"name":"inputBorderColor","type":"color","label":"Color Input","value":"rgba(44, 128, 176, 0.68)"},{"name":"extraProps","type":"group","label":"Extras","props":[{"name":"divider","type":"divider","label":"divider","value":""},{"name":"outputCheckbox","type":"checkbox","label":"Output as object","value":false},{"name":"outputArray","type":"array","label":"Output Structure:","value":[]},{"name":"divider2","type":"divider","label":"divider","value":""},{"name":"inputCheckbox","type":"checkbox","label":"Extract values from input","value":false},{"name":"inputArray","type":"extract","label":"Values to Extract:","value":[]},{"name":"divider3","type":"divider","label":"divider","value":""},{"name":"cutCodeCheckbox","type":"checkbox","label":"Cut Code from Output","value":false}]}],"title":"Search Query Creator","category":"prompt","videoUrl":"/videos/nodes/video.mp4","iconImage":"/nodes/icons/agent.png","description":"The \"Agent\" node is a versatile tool for interacting with various Large Language Models (LLMs). It processes user input and generates AI responses based on the selected model and configuration.\n\n### Features and Properties:\n\n1. **Instructions (Textbox):**  \n   - Provides specific instructions or a prompt to guide the model's behavior.\n   - **Input:** A string, e.g., \"Summarize the input in one sentence.\"  \n   - **Default Value:** \"Enter what to do with the input\"\n\n2. **Model (Dropdown):**  \n   - Allows selection of a pre-configured LLM from an extensive list.  \n   - **Input:** A single string or an array of strings specifying the model(s), e.g., [\"openai/gpt-3.5-turbo\"]  \n   - **Default Value:** [\"openai/gpt-3.5-turbo\"]\n\n3. **Color Input:**  \n   - Sets a custom border color for the input visualization.  \n   - **Input:** A string in RGBA format, e.g., \"rgba(255,255,255,1)\"  \n   - **Default Value:** \"rgba(255,255,255)\"\n\n4. **Extras (Group):**  \n   Additional configurable properties:  \n   - **Output as Object (Checkbox):** Returns the result in object format if enabled.  \n     - **Default:** false  \n   - **Output Structure (Array):** Specifies the structure of the output object.  \n     - **Input:** An array of key-value pairs. Example:  \n       [\n         { \"key\": \"summary\", \"value\": \"A brief summary of the input\" }\n       ]  \n     - **Default Value:** []\n   - **Extract Values from Input (Checkbox):** Extracts specified values from the input data.  \n     - **Default:** false  \n   - **Values to Extract (Extract):** Defines which keys to extract if the above is enabled.  \n     - **Input:** An array of keys to extract, e.g., [\"name\", \"age\"]  \n     - **Default Value:** []\n   - **Cut Code from Output (Checkbox):** Removes code snippets (formatted as markdown code blocks) from the output.  \n     - **Default:** false\n\n### Processing:\n1. **Input:** A string containing the text to process. Example:  \n   \"What are the key points of this document?\"\n2. **Output:** A string or object (depending on configuration), e.g.,  \n   {\n     \"summary\": \"The document discusses key points about AI development.\"\n   }\n","connectedFrom":["node_1738585853334_0.6172779817843781"],"useModalLibrary":true},"fileName":"newPromptNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":377,"dragging":false,"position":{"x":-3260,"y":160},"selected":false,"positionAbsolute":{"x":-3260,"y":160}},{"id":"node_1738586069680_0.7067656171604435","data":{"id":"node_1738586069680_0.7067656171604435","title":"Web Search","config":{"icon":"IconWorldSearch","type":"web-search","props":[{"name":"results","type":"dropdown","label":"Max. number of results:","value":"8","options":["1","2","3","4","5","6","7","8","9","10"]}],"title":"Web Search","category":"special","videoUrl":"/videos/nodes/video.mp4","description":"This node performs a web search using Bing and retrieves search results. It allows you to specify the maximum number of results to fetch for the provided search term.\n  \n### Features:\n  \n  1. **Max. Number of Results**:\n     - Specify the maximum number of search results to retrieve (1–10).\n     - **Input Type**: Dropdown.\n     - **Default Value**: `5`.\n  \n### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - The search term or query for which results are to be retrieved.\n    - **Example Input**:\n      `\"Artificial Intelligence latest advancements\"`\n  \n  - **Output**:\n    - A list of search results from Bing, with each result including the title, URL, and a brief snippet.\n    - **Example Output**:\n      ```json\n      [\n        {\n          \"title\": \"The Future of AI\",\n          \"url\": \"https://example.com/future-of-ai\",\n          \"snippet\": \"Learn about the latest advancements in artificial intelligence...\"\n        },\n        {\n          \"title\": \"AI Research Trends\",\n          \"url\": \"https://example.com/ai-research-trends\",\n          \"snippet\": \"Explore key trends shaping the field of AI research...\"\n        }\n      ]\n      ```\n  \n### Behavior:\n  \n  1. **Search Execution**:\n     - Takes the input search term and fetches the specified number of results from Bing.\n  \n  2. **Result Formatting**:\n     - Outputs an array of objects, where each object contains:\n       - `title`: The title of the result.\n       - `url`: The URL of the result.\n       - `snippet`: A brief summary or snippet from the webpage.\n  \n  3. **Error Handling**:\n     - Logs errors if the search task fails and returns no output.\n  \n### Notes:\n  \n  - Ensure the input is a clear and concise search term for best results.\n  - Use the **Max. Number of Results** dropdown to control the number of results retrieved.\n  - This node is ideal for fetching quick search results for research, content generation, or contextual workflows.\n  ","connectedFrom":["node_1738585847280_0.6838047219459011"]},"fileName":"webSearchNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":392,"height":159,"dragging":false,"position":{"x":-2660,"y":340},"selected":false,"positionAbsolute":{"x":-2660,"y":340}},{"id":"node_1738586090848_0.624801622112114","data":{"id":"node_1738585688071_0.2136675894226423","title":"Agent","config":{"icon":"IconMessageDots","type":"agent","image":"/nodes/icons/agent.png","props":[{"name":"textbox","type":"textbox","label":"Instructions","value":"You are Engine-1, an AI model developed by Spark Engine and a multi-agent system. You can search the web, generate images, videos and music (but you need an mp3 url to use as a reference for music).\n\nYOU HAVE JUST SEARCHED THE WEB!\n\nReturn any relevant results based on what you have searched for / the data you now have and answer the user with it"},{"name":"taskType","type":"dropdown","label":"Model","value":"google/gemma2-9b-it","options":["Gryphe/MythoMax-L2-13b","NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO","Qwen/Qwen2.5-Coder-32B-Instruct","Qwen/Qwen2.5-7B-Instruct-Turbo","Qwen/Qwen2.5-72B-Instruct-Turbo","Qwen/Qwen2-72B-Instruct","Qwen/Qwen1.5-72B-Chat","anthropic/claude-3-5-sonnet-latest","anthropic/claude-3-5-haiku-latest","anthropic/claude-3-5-opus-latest","anthropic/claude-3-sonnet-latest","anthropic/claude-3-haiku-latest","anthropic/claude-3-opus-latest","codellama/CodeLlama-34b-Instruct-hf","databricks/dbrx-instruct","deepseek-ai/deepseek-llm-67b-chat","deepseek-ai/DeepSeek-R1","google/gemma-7b-it","google/gemma2-9b-it","google/gemma-2-27b-it","google/gemma-2b-it","meta-llama/Llama-2-7b-chat-hf","meta-llama/llama-3.3-70b-versatile","meta-llama/llama-3.1-8b-instant","meta-llama/llama-3.1-70b-cerebras","meta-llama/llama-3.1-8b-cerebras","meta-llama/llama-3.2-1b-preview","meta-llama/llama-3.2-3b-preview","meta-llama/Llama-2-70b-hf","meta-llama/Meta-Llama-3-8B-Instruct-Lite","meta-llama/Meta-Llama-3-70B-Instruct-Lite","meta-llama/Llama-3-8b-chat-hf","meta-llama/Llama-3-70b-chat-hf","meta-llama/Llama-2-13b-chat-hf","meta-llama/llama-guard-3-8b","meta-llama/Llama-2-13b-chat-hf","microsoft/WizardLM-2-8x22B","mistralai/mixtral-8x7b-32768","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x22B-Instruct-v0.1","mistralai/Mistral-7B-v0.1","mistralai/Mixtral-8x7B-v0.1","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mixtral-8x22B-Instruct-v0.1","nvidia/Llama-3.1-Nemotron-70B-Instruct-HF","openai/gpt-3.5-turbo","openai/gpt-3.5-turbo-16k","openai/gpt-4-turbo","openai/gpt-4o","openai/gpt-4o-mini","openai/gpt-4o-tiny-output","sparkengine/charlottes-web","sparkengine/charlottes-web-large","sparkengine/charlottes-web-xl","sparkengine/Charlottes-Page-2.1","togethercomputer/StripedHyena-Nous-7B","upstage/SOLAR-10.7B-Instruct-v1.0","prompthero/openjourney","runwayml/stable-diffusion-v1-5","SG161222/Realistic_Vision_V3.0_VAE","stabilityai/stable-diffusion-2-1","stabilityai/stable-diffusion-xl-base-1.0","wavymulder/Analog-Diffusion","meshy/text-to-3d-enhanced","meshy/text-to-voxel-enhanced","meshy/text-to-voxel-2v-enhanced","meshy/text-to-voxel-4v-enhanced","meshy/text-to-voxel-8v-enhanced","openai/dall-e-3","openai/dall-e-3-hd","sparkengine/Llama3.3-70b-GTR","sparkengine/Charlottes-Web-2.1","sparkengine/Charlottes-Web-2.1-Lite","sparkengine/Charlottes-Page-2.1","minimax/audio-01"]},{"name":"inputBorderColor","type":"color","label":"Color Input","value":"rgba(35, 142, 184, 0.7)"},{"name":"extraProps","type":"group","label":"Extras","props":[{"name":"divider","type":"divider","label":"divider","value":""},{"name":"outputCheckbox","type":"checkbox","label":"Output as object","value":false},{"name":"outputArray","type":"array","label":"Output Structure:","value":[]},{"name":"divider2","type":"divider","label":"divider","value":""},{"name":"inputCheckbox","type":"checkbox","label":"Extract values from input","value":false},{"name":"inputArray","type":"extract","label":"Values to Extract:","value":[]},{"name":"divider3","type":"divider","label":"divider","value":""},{"name":"cutCodeCheckbox","type":"checkbox","label":"Cut Code from Output","value":false}]}],"title":"Chatbot (web search)","category":"prompt","videoUrl":"/videos/nodes/video.mp4","iconImage":"/nodes/icons/agent.png","description":"The \"Agent\" node is a versatile tool for interacting with various Large Language Models (LLMs). It processes user input and generates AI responses based on the selected model and configuration.\n\n### Features and Properties:\n\n1. **Instructions (Textbox):**  \n   - Provides specific instructions or a prompt to guide the model's behavior.\n   - **Input:** A string, e.g., \"Summarize the input in one sentence.\"  \n   - **Default Value:** \"Enter what to do with the input\"\n\n2. **Model (Dropdown):**  \n   - Allows selection of a pre-configured LLM from an extensive list.  \n   - **Input:** A single string or an array of strings specifying the model(s), e.g., [\"openai/gpt-3.5-turbo\"]  \n   - **Default Value:** [\"openai/gpt-3.5-turbo\"]\n\n3. **Color Input:**  \n   - Sets a custom border color for the input visualization.  \n   - **Input:** A string in RGBA format, e.g., \"rgba(255,255,255,1)\"  \n   - **Default Value:** \"rgba(255,255,255)\"\n\n4. **Extras (Group):**  \n   Additional configurable properties:  \n   - **Output as Object (Checkbox):** Returns the result in object format if enabled.  \n     - **Default:** false  \n   - **Output Structure (Array):** Specifies the structure of the output object.  \n     - **Input:** An array of key-value pairs. Example:  \n       [\n         { \"key\": \"summary\", \"value\": \"A brief summary of the input\" }\n       ]  \n     - **Default Value:** []\n   - **Extract Values from Input (Checkbox):** Extracts specified values from the input data.  \n     - **Default:** false  \n   - **Values to Extract (Extract):** Defines which keys to extract if the above is enabled.  \n     - **Input:** An array of keys to extract, e.g., [\"name\", \"age\"]  \n     - **Default Value:** []\n   - **Cut Code from Output (Checkbox):** Removes code snippets (formatted as markdown code blocks) from the output.  \n     - **Default:** false\n\n### Processing:\n1. **Input:** A string containing the text to process. Example:  \n   \"What are the key points of this document?\"\n2. **Output:** A string or object (depending on configuration), e.g.,  \n   {\n     \"summary\": \"The document discusses key points about AI development.\"\n   }\n","connectedFrom":["node_1738586095136_0.9916087469545325"],"useModalLibrary":true},"fileName":"newPromptNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":486,"dragging":false,"position":{"x":-1620,"y":220},"selected":false,"positionAbsolute":{"x":-1620,"y":220}},{"id":"node_1738586095136_0.9916087469545325","data":{"id":"node_1738586095136_0.9916087469545325","title":"Merge","config":{"icon":"IconArrowMerge","type":"merge","props":[{"name":"taskType","type":"dropdown-merge","label":"Input order","value":"node_1738586151361_0.7114404146479745","options":[]}],"title":"Merge","category":"control","videoUrl":"/videos/nodes/video.mp4","description":"This node merges two text inputs into a single output, ensuring the text associated with the user-selected ID is placed first.\n  \n### Features:\n\n1. **Merge Text Inputs**:\n   - Accepts text from two inputs (top and bottom).\n   - Expects an array [text1, text2, id1, id2].\n\n2. **Ordering Based on Selected Edge**:\n   - Whichever ID matches the node's \"Selected edge\" property will have its text go first.\n\n### Input/Output Structure:\n\n- **Input**: `[text1, text2, id1, id2]`\n- **Output**: A single concatenated string (the text whose ID matches the selected edge, plus the other text).\n\n### Behavior:\n\n1. Waits until both inputs are available.\n2. Determines which text is first by comparing `id1` or `id2` to the selected \"taskType\".\n3. Returns a simple concatenation of that order.\n","connectedFrom":["node_1738586069680_0.7067656171604435","node_1738586151361_0.7114404146479745"],"useSecondInput":true},"fileName":"mergeNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":392,"height":184,"dragging":false,"position":{"x":-2140,"y":520},"selected":false,"positionAbsolute":{"x":-2140,"y":520}},{"id":"node_1738586151361_0.7114404146479745","data":{"id":"node_1738586151361_0.7114404146479745","title":"Add Text","config":{"icon":"IconTextSize","type":"add-text","props":[{"name":"textToAdd","type":"textbox","label":"Text to Add","value":"Users initial input"},{"name":"prepend","type":"checkbox","label":"Prepend Text","value":true}],"title":"Add Text","category":"data","videoUrl":"/videos/nodes/addtext.mp4","description":"This node adds a specified text to the input string, either at the beginning or the end, based on the state of a checkbox. It is useful for appending or prepending additional text to any input data.\n### Features:\n1. **Text to Add**: \n  - Allows you to specify the text that will be added.\n  - **Input Type**: Textbox.\n  - **Default Value**: An empty string (`\"\"`).\n    \n2. **Prepend Text**:\n  - A checkbox that determines whether the text is added at the beginning (prepended) or the end (appended).\n  - **Input Type**: Checkbox.\n  - **Default Value**: `false` (text is appended by default).\n    \n### Input/Output Structure: \n  - **Input (inputValue)**:\n  - A string containing the initial text you want to modify.\n  - **Example**: `\"Original Text\"`\n    \n  - **Output**:\n    - A string with the specified text added either at the start or end.\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is false)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Original Text\nHello\"`\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is true)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Hello\nOriginal Text\"`\n    \n### Behavior:\n  - If the input string (`inputValue`) is empty, only the `textToAdd` is returned as the result.\n    - **Example**: With `textToAdd = \"Hello\"` and an empty input, the output will be `\"Hello\"`.\n    \n  - If `prepend` is selected, the `textToAdd` will be placed before the input, separated by a newline.\n  - If `prepend` is not selected, the `textToAdd` will be placed after the input, separated by a newline.\n    ","connectedFrom":["node_1738585224359_0.5155591798594521"]},"fileName":"addTextNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":234,"dragging":false,"position":{"x":-3260,"y":580},"selected":false,"positionAbsolute":{"x":-3260,"y":580}},{"id":"node_1738586246311_0.03932281528527537","data":{"text":"","text2":"","title":"Response (web search)","config":{"props":[],"connectedFrom":["node_1738586090848_0.624801622112114"]},"companion_id":"","companion_pfp":""},"type":"outputPassNode","style":{"border":"1px solid #777","background":"transparent"},"width":204,"height":82,"dragging":false,"position":{"x":-1160,"y":280},"selected":false,"positionAbsolute":{"x":-1160,"y":280}},{"id":"node_1739398287613_0.8441320156004377","data":{"id":"node_1739398287613_0.8441320156004377","title":"Condition (Keywords)","config":{"icon":"IconSwitch","type":"multi-condition-keywords","props":[{"name":"conditions","type":"conditions","label":"Keyword Conditions","value":[{"type":"textbox","value":"{{chat}}"},{"type":"textbox","value":"{{image}}"},{"type":"textbox","value":"{{video}}"},{"type":"textbox","value":"{{search}}"},{"type":"textbox","value":"{{music}}"}]},{"name":"ignoreCase","type":"checkbox","label":"Ignore Case","value":false}],"title":"Condition (Keywords)","category":"control","description":"This node checks whether the input text contains multiple sets of keywords and dynamically routes execution based on the results.\n    \n### Features:\n- Define multiple keyword conditions.\n- Routes based on which keyword conditions are met.\n- Supports case-sensitive or case-insensitive keyword matching.\n\n### Input/Output Structure:\n**Input (inputValue)**: \n- A plain text string to search for keywords.\n- **Example**: `\"I love dogs and cats.\"`\n\n**Output**:\n- A structured result indicating which conditions are met.\n- **Example Output**:\n  ```json\n  {\n    \"1_TRUE\": true,\n    \"2_FALSE\": false,\n    \"3_TRUE\": true\n  }\n  ```\n\n### Notes:\n- Each condition checks if **any** of its keywords appear in the input.\n- Matched conditions execute their respective branches.\n    ","connectedFrom":["node_1722881042587_0.9224432518755226"],"removeOutputHandle":false},"fileName":"multiConditionKeywordsNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":625,"dragging":false,"position":{"x":-4340,"y":-800},"selected":false,"positionAbsolute":{"x":-4340,"y":-800}},{"id":"node_1739398598821_0.9691920984692806","data":{"id":"node_1738585638832_0.6785478823549926","text":"","text2":"","title":"Error","config":{"props":[],"connectedFrom":["node_1738585584400_0.7178022966662212"]},"companion_id":"","companion_pfp":""},"type":"outputPassNode","style":{"border":"1px solid #777","background":"transparent"},"width":204,"height":82,"dragging":false,"position":{"x":-3140,"y":-1520},"selected":false,"positionAbsolute":{"x":-3140,"y":-1520}},{"id":"node_1739400631486_0.13562682979016372","data":{"id":"node_1739400631486_0.13562682979016372","title":"Delete Text","config":{"icon":"IconEraser","type":"delete-text","props":[{"name":"wordsToDelete","type":"extract","label":"Words to Delete","value":["{{chat}}","{{search}}","{{search}}","{{search}}"]},{"name":"ignoreCase","type":"checkbox","label":"Ignore Case","value":false},{"name":"replaceWithNewLines","type":"checkbox","label":"Replace with New Lines","value":false}],"title":"Delete Text","category":"data","description":"This node removes specified strings (words or phrases) from the input text.\n  \n  ### Features:\n  \n  1. **Words to Delete**:\n     - Specify a list of words or phrases to delete from the input.\n     - **Input Type**: List of strings.\n     - **Default Value**: An empty array (`[]`).\n     - **Example**: `[\"remove\", \"this\"]`\n  \n  2. **Ignore Case**:\n     - Option to make the word removal case-insensitive.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  3. **Replace with New Lines**:\n     - Option to replace the removed words/phrases with two new lines.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  ### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - A plain text string from which specified words/phrases will be removed.\n    - **Example**: `\"Please remove this example.\"`\n  \n  - **Output**:\n    - A string with the specified words/phrases removed or replaced with two new lines.\n    - **Examples**:\n      - **With words to delete `[\"remove\", \"this\"]`**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please example.\"`\n      - **With Replace with New Lines enabled**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please\n\nexample.\"`\n  \n  ### Behavior:\n  \n  1. **Text Deletion**:\n     - Removes all occurrences of the specified words/phrases from the input text, regardless of whether spaces or other characters are next to them.\n     - Handles both case-sensitive and case-insensitive matching based on configuration.\n  \n  2. **Validation**:\n     - Ensures that the list of words/phrases to delete is not empty.\n  \n  3. **Error Handling**:\n     - Logs an error if no words are provided for deletion and stops execution.\n  \n  ### Notes:\n  - If no words are specified for deletion, the input text is returned unchanged.\n  - This node is useful for cleaning or preprocessing input text by removing unwanted words or phrases.\n  "},"fileName":"deleteWordsNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":278,"dragging":false,"position":{"x":-3800,"y":-1240},"selected":false,"positionAbsolute":{"x":-3800,"y":-1240}},{"id":"node_1739400694324_0.9584736643303158","data":{"id":"node_1739400631486_0.13562682979016372","title":"Delete Text","config":{"icon":"IconEraser","type":"delete-text","props":[{"name":"wordsToDelete","type":"extract","label":"Words to Delete","value":["{{image}}","{{image}}","{{search}}","{{search}}"]},{"name":"ignoreCase","type":"checkbox","label":"Ignore Case","value":false},{"name":"replaceWithNewLines","type":"checkbox","label":"Replace with New Lines","value":false}],"title":"Delete Text","category":"data","description":"This node removes specified strings (words or phrases) from the input text.\n  \n  ### Features:\n  \n  1. **Words to Delete**:\n     - Specify a list of words or phrases to delete from the input.\n     - **Input Type**: List of strings.\n     - **Default Value**: An empty array (`[]`).\n     - **Example**: `[\"remove\", \"this\"]`\n  \n  2. **Ignore Case**:\n     - Option to make the word removal case-insensitive.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  3. **Replace with New Lines**:\n     - Option to replace the removed words/phrases with two new lines.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  ### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - A plain text string from which specified words/phrases will be removed.\n    - **Example**: `\"Please remove this example.\"`\n  \n  - **Output**:\n    - A string with the specified words/phrases removed or replaced with two new lines.\n    - **Examples**:\n      - **With words to delete `[\"remove\", \"this\"]`**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please example.\"`\n      - **With Replace with New Lines enabled**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please\n\nexample.\"`\n  \n  ### Behavior:\n  \n  1. **Text Deletion**:\n     - Removes all occurrences of the specified words/phrases from the input text, regardless of whether spaces or other characters are next to them.\n     - Handles both case-sensitive and case-insensitive matching based on configuration.\n  \n  2. **Validation**:\n     - Ensures that the list of words/phrases to delete is not empty.\n  \n  3. **Error Handling**:\n     - Logs an error if no words are provided for deletion and stops execution.\n  \n  ### Notes:\n  - If no words are specified for deletion, the input text is returned unchanged.\n  - This node is useful for cleaning or preprocessing input text by removing unwanted words or phrases.\n  "},"fileName":"deleteWordsNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":278,"dragging":false,"position":{"x":-3800,"y":-800},"selected":false,"positionAbsolute":{"x":-3800,"y":-800}},{"id":"node_1739400745435_0.027661373422064095","data":{"id":"node_1739400631486_0.13562682979016372","title":"Delete Text","config":{"icon":"IconEraser","type":"delete-text","props":[{"name":"wordsToDelete","type":"extract","label":"Words to Delete","value":["{{video}}","{{video}}","{{video}}","{{search}}"]},{"name":"ignoreCase","type":"checkbox","label":"Ignore Case","value":false},{"name":"replaceWithNewLines","type":"checkbox","label":"Replace with New Lines","value":false}],"title":"Delete Text","category":"data","description":"This node removes specified strings (words or phrases) from the input text.\n  \n  ### Features:\n  \n  1. **Words to Delete**:\n     - Specify a list of words or phrases to delete from the input.\n     - **Input Type**: List of strings.\n     - **Default Value**: An empty array (`[]`).\n     - **Example**: `[\"remove\", \"this\"]`\n  \n  2. **Ignore Case**:\n     - Option to make the word removal case-insensitive.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  3. **Replace with New Lines**:\n     - Option to replace the removed words/phrases with two new lines.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  ### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - A plain text string from which specified words/phrases will be removed.\n    - **Example**: `\"Please remove this example.\"`\n  \n  - **Output**:\n    - A string with the specified words/phrases removed or replaced with two new lines.\n    - **Examples**:\n      - **With words to delete `[\"remove\", \"this\"]`**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please example.\"`\n      - **With Replace with New Lines enabled**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please\n\nexample.\"`\n  \n  ### Behavior:\n  \n  1. **Text Deletion**:\n     - Removes all occurrences of the specified words/phrases from the input text, regardless of whether spaces or other characters are next to them.\n     - Handles both case-sensitive and case-insensitive matching based on configuration.\n  \n  2. **Validation**:\n     - Ensures that the list of words/phrases to delete is not empty.\n  \n  3. **Error Handling**:\n     - Logs an error if no words are provided for deletion and stops execution.\n  \n  ### Notes:\n  - If no words are specified for deletion, the input text is returned unchanged.\n  - This node is useful for cleaning or preprocessing input text by removing unwanted words or phrases.\n  "},"fileName":"deleteWordsNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":278,"dragging":false,"position":{"x":-3800,"y":-360},"selected":false,"positionAbsolute":{"x":-3800,"y":-360}},{"id":"node_1739400756576_0.479416397234403","data":{"id":"node_1739400631486_0.13562682979016372","title":"Delete Text","config":{"icon":"IconEraser","type":"delete-text","props":[{"name":"wordsToDelete","type":"extract","label":"Words to Delete","value":["{{search}}","{{search}}","{{search}}","{{search}}"]},{"name":"ignoreCase","type":"checkbox","label":"Ignore Case","value":false},{"name":"replaceWithNewLines","type":"checkbox","label":"Replace with New Lines","value":false}],"title":"Delete Text","category":"data","description":"This node removes specified strings (words or phrases) from the input text.\n  \n  ### Features:\n  \n  1. **Words to Delete**:\n     - Specify a list of words or phrases to delete from the input.\n     - **Input Type**: List of strings.\n     - **Default Value**: An empty array (`[]`).\n     - **Example**: `[\"remove\", \"this\"]`\n  \n  2. **Ignore Case**:\n     - Option to make the word removal case-insensitive.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  3. **Replace with New Lines**:\n     - Option to replace the removed words/phrases with two new lines.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  ### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - A plain text string from which specified words/phrases will be removed.\n    - **Example**: `\"Please remove this example.\"`\n  \n  - **Output**:\n    - A string with the specified words/phrases removed or replaced with two new lines.\n    - **Examples**:\n      - **With words to delete `[\"remove\", \"this\"]`**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please example.\"`\n      - **With Replace with New Lines enabled**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please\n\nexample.\"`\n  \n  ### Behavior:\n  \n  1. **Text Deletion**:\n     - Removes all occurrences of the specified words/phrases from the input text, regardless of whether spaces or other characters are next to them.\n     - Handles both case-sensitive and case-insensitive matching based on configuration.\n  \n  2. **Validation**:\n     - Ensures that the list of words/phrases to delete is not empty.\n  \n  3. **Error Handling**:\n     - Logs an error if no words are provided for deletion and stops execution.\n  \n  ### Notes:\n  - If no words are specified for deletion, the input text is returned unchanged.\n  - This node is useful for cleaning or preprocessing input text by removing unwanted words or phrases.\n  "},"fileName":"deleteWordsNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":278,"dragging":false,"position":{"x":-3800,"y":80},"selected":false,"positionAbsolute":{"x":-3800,"y":80}},{"id":"node_1739743519401_0.2509102051842378","data":{"id":"node_1739400631486_0.13562682979016372","title":"Delete Text","config":{"icon":"IconEraser","type":"delete-text","props":[{"name":"wordsToDelete","type":"extract","label":"Words to Delete","value":["{{music}}","{{music}}","{{music}}","{{music}}","{{music}}"]},{"name":"ignoreCase","type":"checkbox","label":"Ignore Case","value":false},{"name":"replaceWithNewLines","type":"checkbox","label":"Replace with New Lines","value":false}],"title":"Delete Text","category":"data","description":"This node removes specified strings (words or phrases) from the input text.\n  \n  ### Features:\n  \n  1. **Words to Delete**:\n     - Specify a list of words or phrases to delete from the input.\n     - **Input Type**: List of strings.\n     - **Default Value**: An empty array (`[]`).\n     - **Example**: `[\"remove\", \"this\"]`\n  \n  2. **Ignore Case**:\n     - Option to make the word removal case-insensitive.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  3. **Replace with New Lines**:\n     - Option to replace the removed words/phrases with two new lines.\n     - **Input Type**: Checkbox.\n     - **Default Value**: `false`.\n  \n  ### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - A plain text string from which specified words/phrases will be removed.\n    - **Example**: `\"Please remove this example.\"`\n  \n  - **Output**:\n    - A string with the specified words/phrases removed or replaced with two new lines.\n    - **Examples**:\n      - **With words to delete `[\"remove\", \"this\"]`**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please example.\"`\n      - **With Replace with New Lines enabled**:\n        - Input: `\"Please remove this example.\"`\n        - Output: `\"Please\n\nexample.\"`\n  \n  ### Behavior:\n  \n  1. **Text Deletion**:\n     - Removes all occurrences of the specified words/phrases from the input text, regardless of whether spaces or other characters are next to them.\n     - Handles both case-sensitive and case-insensitive matching based on configuration.\n  \n  2. **Validation**:\n     - Ensures that the list of words/phrases to delete is not empty.\n  \n  3. **Error Handling**:\n     - Logs an error if no words are provided for deletion and stops execution.\n  \n  ### Notes:\n  - If no words are specified for deletion, the input text is returned unchanged.\n  - This node is useful for cleaning or preprocessing input text by removing unwanted words or phrases.\n  "},"fileName":"deleteWordsNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":278,"dragging":false,"position":{"x":-3840,"y":840},"selected":false,"positionAbsolute":{"x":-3840,"y":840}},{"id":"node_1739743622225_0.5117856268459744","data":{"id":"node_1739743622225_0.5117856268459744","title":"Agent","config":{"icon":"IconMessageDots","type":"agent","image":"/nodes/icons/agent.png","props":[{"name":"textbox","type":"textbox","label":"Instructions","value":"Enter what to do with the input"},{"name":"taskType","type":"dropdown","label":"Model","value":"minimax/audio-01","options":["Gryphe/MythoMax-L2-13b","NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO","Qwen/Qwen2.5-Coder-32B-Instruct","Qwen/Qwen2.5-7B-Instruct-Turbo","Qwen/Qwen2.5-72B-Instruct-Turbo","Qwen/Qwen2-72B-Instruct","Qwen/Qwen1.5-72B-Chat","anthropic/claude-3-5-sonnet-latest","anthropic/claude-3-5-haiku-latest","anthropic/claude-3-5-opus-latest","anthropic/claude-3-sonnet-latest","anthropic/claude-3-haiku-latest","anthropic/claude-3-opus-latest","codellama/CodeLlama-34b-Instruct-hf","databricks/dbrx-instruct","deepseek-ai/deepseek-llm-67b-chat","deepseek-ai/DeepSeek-R1","google/gemma-7b-it","google/gemma2-9b-it","google/gemma-2-27b-it","google/gemma-2b-it","meta-llama/Llama-2-7b-chat-hf","meta-llama/llama-3.3-70b-versatile","meta-llama/llama-3.1-8b-instant","meta-llama/llama-3.1-70b-cerebras","meta-llama/llama-3.1-8b-cerebras","meta-llama/llama-3.2-1b-preview","meta-llama/llama-3.2-3b-preview","meta-llama/Llama-2-70b-hf","meta-llama/Meta-Llama-3-8B-Instruct-Lite","meta-llama/Meta-Llama-3-70B-Instruct-Lite","meta-llama/Llama-3-8b-chat-hf","meta-llama/Llama-3-70b-chat-hf","meta-llama/Llama-2-13b-chat-hf","meta-llama/llama-guard-3-8b","meta-llama/Llama-2-13b-chat-hf","microsoft/WizardLM-2-8x22B","mistralai/mixtral-8x7b-32768","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x22B-Instruct-v0.1","mistralai/Mistral-7B-v0.1","mistralai/Mixtral-8x7B-v0.1","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mixtral-8x22B-Instruct-v0.1","nvidia/Llama-3.1-Nemotron-70B-Instruct-HF","openai/gpt-3.5-turbo","openai/gpt-3.5-turbo-16k","openai/gpt-4-turbo","openai/gpt-4o","openai/gpt-4o-mini","openai/gpt-4o-tiny-output","sparkengine/charlottes-web","sparkengine/charlottes-web-large","sparkengine/charlottes-web-xl","sparkengine/Charlottes-Page-2.1","togethercomputer/StripedHyena-Nous-7B","upstage/SOLAR-10.7B-Instruct-v1.0","prompthero/openjourney","runwayml/stable-diffusion-v1-5","SG161222/Realistic_Vision_V3.0_VAE","stabilityai/stable-diffusion-2-1","stabilityai/stable-diffusion-xl-base-1.0","wavymulder/Analog-Diffusion","meshy/text-to-3d-enhanced","meshy/text-to-voxel-enhanced","meshy/text-to-voxel-2v-enhanced","meshy/text-to-voxel-4v-enhanced","meshy/text-to-voxel-8v-enhanced","openai/dall-e-3","openai/dall-e-3-hd","sparkengine/Llama3.3-70b-GTR","sparkengine/Charlottes-Web-2.1","sparkengine/Charlottes-Web-2.1-Lite","sparkengine/Charlottes-Page-2.1","minimax/audio-01"]},{"name":"inputBorderColor","type":"color","label":"Color Input","value":"rgba(204, 39, 88, 0.69)"},{"name":"extraProps","type":"group","label":"Extras","props":[{"name":"divider","type":"divider","label":"divider","value":""},{"name":"languageSettings","type":"language-settings","label":"Language Settings","value":{"max_tokens":2048,"temperature":0.7,"max_tokens_limit":4096}},{"name":"divider2","type":"divider","label":"divider","value":""},{"name":"outputCheckbox","type":"checkbox","label":"Output as object","value":false},{"name":"outputArray","type":"array","label":"Output Structure:","value":[]},{"name":"divider3","type":"divider","label":"divider","value":""},{"name":"inputCheckbox","type":"checkbox","label":"Extract values from input","value":false},{"name":"inputArray","type":"extract","label":"Values to Extract:","value":[]},{"name":"divider4","type":"divider","label":"divider","value":""},{"name":"cutCodeCheckbox","type":"checkbox","label":"Cut Code from Output","value":false}]}],"title":"Agent","category":"prompt","videoUrl":"/videos/nodes/video.mp4","iconImage":"/nodes/icons/agent.png","description":"The \"Agent\" node is a versatile tool for interacting with various Large Language Models (LLMs). It processes user input and generates AI responses based on the selected model and configuration.\n\n### Features and Properties:\n\n1. **Instructions (Textbox):**  \n   - Provides specific instructions or a prompt to guide the model's behavior.\n   - **Input:** A string, e.g., \"Summarize the input in one sentence.\"  \n   - **Default Value:** \"Enter what to do with the input\"\n\n2. **Model (Dropdown):**  \n   - Allows selection of a pre-configured LLM from an extensive list.  \n   - **Input:** A single string or an array of strings specifying the model(s), e.g., [\"openai/gpt-3.5-turbo\"]  \n   - **Default Value:** [\"openai/gpt-3.5-turbo\"]\n\n3. **Color Input:**  \n   - Sets a custom border color for the input visualization.  \n   - **Input:** A string in RGBA format, e.g., \"rgba(255,255,255,1)\"  \n   - **Default Value:** \"rgba(255,255,255)\"\n\n4. **Extras (Group):**  \n   Additional configurable properties:  \n   - **Output as Object (Checkbox):** Returns the result in object format if enabled.  \n     - **Default:** false  \n   - **Output Structure (Array):** Specifies the structure of the output object.  \n     - **Input:** An array of key-value pairs. Example:  \n       [\n         { \"key\": \"summary\", \"value\": \"A brief summary of the input\" }\n       ]  \n     - **Default Value:** []\n   - **Extract Values from Input (Checkbox):** Extracts specified values from the input data.  \n     - **Default:** false  \n   - **Values to Extract (Extract):** Defines which keys to extract if the above is enabled.  \n     - **Input:** An array of keys to extract, e.g., [\"name\", \"age\"]  \n     - **Default Value:** []\n   - **Cut Code from Output (Checkbox):** Removes code snippets (formatted as markdown code blocks) from the output.  \n     - **Default:** false\n\n### Processing:\n1. **Input:** A string containing the text to process. Example:  \n   \"What are the key points of this document?\"\n2. **Output:** A string or object (depending on configuration), e.g.,  \n   {\n     \"summary\": \"The document discusses key points about AI development.\"\n   }\n","useModalLibrary":true},"fileName":"newPromptNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":313,"dragging":false,"position":{"x":-2840,"y":1140},"selected":false,"positionAbsolute":{"x":-2840,"y":1140}},{"id":"node_1739743653618_0.30723950393773714","data":{"id":"node_1738585560896_0.14749849012893312","title":"Add Text","config":{"icon":"IconTextSize","type":"add-text","props":[{"name":"textToAdd","type":"textbox","label":"Text to Add","value":"Here is your generated video as requested:\n\n"},{"name":"prepend","type":"checkbox","label":"Prepend Text","value":true}],"title":"Add Text","category":"data","videoUrl":"/videos/nodes/addtext.mp4","description":"This node adds a specified text to the input string, either at the beginning or the end, based on the state of a checkbox. It is useful for appending or prepending additional text to any input data.\n### Features:\n1. **Text to Add**: \n  - Allows you to specify the text that will be added.\n  - **Input Type**: Textbox.\n  - **Default Value**: An empty string (`\"\"`).\n    \n2. **Prepend Text**:\n  - A checkbox that determines whether the text is added at the beginning (prepended) or the end (appended).\n  - **Input Type**: Checkbox.\n  - **Default Value**: `false` (text is appended by default).\n    \n### Input/Output Structure: \n  - **Input (inputValue)**:\n  - A string containing the initial text you want to modify.\n  - **Example**: `\"Original Text\"`\n    \n  - **Output**:\n    - A string with the specified text added either at the start or end.\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is false)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Original Text\nHello\"`\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is true)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Hello\nOriginal Text\"`\n    \n### Behavior:\n  - If the input string (`inputValue`) is empty, only the `textToAdd` is returned as the result.\n    - **Example**: With `textToAdd = \"Hello\"` and an empty input, the output will be `\"Hello\"`.\n    \n  - If `prepend` is selected, the `textToAdd` will be placed before the input, separated by a newline.\n  - If `prepend` is not selected, the `textToAdd` will be placed after the input, separated by a newline.\n    ","connectedFrom":["node_1737785833246_0.4801137567356579"]},"fileName":"addTextNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":234,"dragging":false,"position":{"x":-2320,"y":1120},"selected":false,"positionAbsolute":{"x":-2320,"y":1120}},{"id":"node_1739743717343_0.59510154798464","data":{"id":"node_1739743717343_0.59510154798464","title":"Multi-Condition (Keywords)","config":{"icon":"IconSwitch","type":"multi-condition-keywords","props":[{"name":"conditions","type":"conditions","label":"Keyword Conditions","value":[{"type":"textbox","value":"https://"}]},{"name":"ignoreCase","type":"checkbox","label":"Ignore Case","value":false}],"title":"Multi-Condition (Keywords)","category":"control","description":"This node checks whether the input text contains multiple sets of keywords and dynamically routes execution based on the results.\n    \n### Features:\n- Define multiple keyword conditions.\n- Routes based on which keyword conditions are met.\n- Supports case-sensitive or case-insensitive keyword matching.\n\n### Input/Output Structure:\n**Input (inputValue)**: \n- A plain text string to search for keywords.\n- **Example**: `\"I love dogs and cats.\"`\n\n**Output**:\n- A structured result indicating which conditions are met.\n- **Example Output**:\n  ```json\n  {\n    \"1_TRUE\": true,\n    \"2_FALSE\": false,\n    \"3_TRUE\": true\n  }\n  ```\n\n### Notes:\n- Each condition checks if **any** of its keywords appear in the input.\n- Matched conditions execute their respective branches.\n    ","removeOutputHandle":false},"fileName":"multiConditionKeywordsNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":317,"dragging":false,"position":{"x":-3340,"y":1000},"selected":false,"positionAbsolute":{"x":-3340,"y":1000}},{"id":"node_1739743770874_0.5914795527999606","data":{"id":"node_1738585560896_0.14749849012893312","title":"Add Text","config":{"icon":"IconTextSize","type":"add-text","props":[{"name":"textToAdd","type":"textbox","label":"Text to Add","value":"You need to provide a link to an mp3 (e.g. https://website.com/your_mp3_file.mp3) as a reference audio track. \n\nPlease include this along with the lyrics to your song\n"},{"name":"prepend","type":"checkbox","label":"Prepend Text","value":false}],"title":"Add Text","category":"data","videoUrl":"/videos/nodes/addtext.mp4","description":"This node adds a specified text to the input string, either at the beginning or the end, based on the state of a checkbox. It is useful for appending or prepending additional text to any input data.\n### Features:\n1. **Text to Add**: \n  - Allows you to specify the text that will be added.\n  - **Input Type**: Textbox.\n  - **Default Value**: An empty string (`\"\"`).\n    \n2. **Prepend Text**:\n  - A checkbox that determines whether the text is added at the beginning (prepended) or the end (appended).\n  - **Input Type**: Checkbox.\n  - **Default Value**: `false` (text is appended by default).\n    \n### Input/Output Structure: \n  - **Input (inputValue)**:\n  - A string containing the initial text you want to modify.\n  - **Example**: `\"Original Text\"`\n    \n  - **Output**:\n    - A string with the specified text added either at the start or end.\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is false)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Original Text\nHello\"`\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is true)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Hello\nOriginal Text\"`\n    \n### Behavior:\n  - If the input string (`inputValue`) is empty, only the `textToAdd` is returned as the result.\n    - **Example**: With `textToAdd = \"Hello\"` and an empty input, the output will be `\"Hello\"`.\n    \n  - If `prepend` is selected, the `textToAdd` will be placed before the input, separated by a newline.\n  - If `prepend` is not selected, the `textToAdd` will be placed after the input, separated by a newline.\n    ","connectedFrom":["node_1737785833246_0.4801137567356579"]},"fileName":"addTextNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":320,"dragging":false,"position":{"x":-2320,"y":760},"selected":false,"positionAbsolute":{"x":-2320,"y":760}},{"id":"node_1739743781248_0.3212029630931401","data":{"id":"node_1739743781248_0.3212029630931401","title":"Clear input","config":{"icon":"IconX","type":"clear-input","title":"Clear input","category":"input","videoUrl":"/videos/nodes/video.mp4","description":"This node clears any incoming input data, effectively resetting the input to an empty string. It then allows the process to proceed to the next node in the workflow.\n  \n### Features:\n  - **Input Clearing**:\n    - The node takes any input string, clears it by setting it to an empty string (`\"\"`), and passes the cleared value to the next node.\n  \n### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - A string containing any incoming data.\n    - **Example**: `\"Some data here\"`\n  \n  - **Output**:\n    - An empty string (`\"\"`) regardless of the incoming input.\n    - **Example**:\n      - Input: `\"Some data here\"`\n      - Output: `\"\"`\n  \n### Behavior:\n  - The node completely destroys any incoming input by replacing it with an empty string.\n  - This operation is useful for workflows where downstream nodes should not have access to the current input data.\n  \n### Notes:\n  - This node does not use any configurable properties.\n  - It simply acts as a reset mechanism for the input pipeline.\n  "},"fileName":"clearNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":98,"dragging":false,"position":{"x":-2820,"y":900},"selected":false,"positionAbsolute":{"x":-2820,"y":900}},{"id":"node_1739743848698_0.621607687108551","data":{"id":"node_1739743848698_0.621607687108551","text":"","text2":"","title":"Response (music error)","config":{"props":[],"connectedFrom":["node_1739743770874_0.5914795527999606"]},"companion_id":"","companion_pfp":""},"type":"outputPassNode","style":{"border":"1px solid #777","background":"transparent"},"width":204,"height":82,"position":{"x":-1760,"y":880}},{"id":"node_1739743858465_0.7930812821220397","data":{"id":"node_1739743848698_0.621607687108551","text":"","text2":"","title":"Response (music)","config":{"props":[]},"companion_id":"","companion_pfp":""},"type":"outputPassNode","style":{"border":"1px solid #777","background":"transparent"},"width":204,"height":82,"dragging":false,"position":{"x":-1760,"y":1160},"selected":false,"positionAbsolute":{"x":-1760,"y":1160}},{"id":"node_1739743961073_0.8408005328226269","data":{"id":"node_1738585584400_0.7178022966662212","title":"Add Text","config":{"icon":"IconTextSize","type":"add-text","props":[{"name":"textToAdd","type":"textbox","label":"Text to Add","value":"Please include a {{command}} at the start of your input while testing here. This is how the project picks and flows through paths conditionally\n"},{"name":"prepend","type":"checkbox","label":"Prepend Text","value":false}],"title":"Add Text","category":"data","videoUrl":"/videos/nodes/addtext.mp4","description":"This node adds a specified text to the input string, either at the beginning or the end, based on the state of a checkbox. It is useful for appending or prepending additional text to any input data.\n### Features:\n1. **Text to Add**: \n  - Allows you to specify the text that will be added.\n  - **Input Type**: Textbox.\n  - **Default Value**: An empty string (`\"\"`).\n    \n2. **Prepend Text**:\n  - A checkbox that determines whether the text is added at the beginning (prepended) or the end (appended).\n  - **Input Type**: Checkbox.\n  - **Default Value**: `false` (text is appended by default).\n    \n### Input/Output Structure: \n  - **Input (inputValue)**:\n  - A string containing the initial text you want to modify.\n  - **Example**: `\"Original Text\"`\n    \n  - **Output**:\n    - A string with the specified text added either at the start or end.\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is false)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Original Text\nHello\"`\n    - **Example (when `textToAdd` is \"Hello\" and `prepend` is true)**:\n      - Input: `\"Original Text\"`\n      - Output: `\"Hello\nOriginal Text\"`\n    \n### Behavior:\n  - If the input string (`inputValue`) is empty, only the `textToAdd` is returned as the result.\n    - **Example**: With `textToAdd = \"Hello\"` and an empty input, the output will be `\"Hello\"`.\n    \n  - If `prepend` is selected, the `textToAdd` will be placed before the input, separated by a newline.\n  - If `prepend` is not selected, the `textToAdd` will be placed after the input, separated by a newline.\n    ","connectedFrom":["node_1737785826937_0.1866964342684303"]},"fileName":"addTextNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":276,"dragging":false,"position":{"x":-3640,"y":-1580},"selected":false,"positionAbsolute":{"x":-3640,"y":-1580}},{"id":"node_1739743966191_0.2552461232417125","data":{"id":"node_1739743966191_0.2552461232417125","title":"Clear input","config":{"icon":"IconX","type":"clear-input","title":"Clear input","category":"input","videoUrl":"/videos/nodes/video.mp4","description":"This node clears any incoming input data, effectively resetting the input to an empty string. It then allows the process to proceed to the next node in the workflow.\n  \n### Features:\n  - **Input Clearing**:\n    - The node takes any input string, clears it by setting it to an empty string (`\"\"`), and passes the cleared value to the next node.\n  \n### Input/Output Structure:\n  \n  - **Input (inputValue)**:\n    - A string containing any incoming data.\n    - **Example**: `\"Some data here\"`\n  \n  - **Output**:\n    - An empty string (`\"\"`) regardless of the incoming input.\n    - **Example**:\n      - Input: `\"Some data here\"`\n      - Output: `\"\"`\n  \n### Behavior:\n  - The node completely destroys any incoming input by replacing it with an empty string.\n  - This operation is useful for workflows where downstream nodes should not have access to the current input data.\n  \n### Notes:\n  - This node does not use any configurable properties.\n  - It simply acts as a reset mechanism for the input pipeline.\n  "},"fileName":"clearNode","companion_id":"","companion_pfp":""},"type":"templateNode","style":{"border":"1px solid #777","background":"transparent"},"width":362,"height":98,"dragging":false,"position":{"x":-4100,"y":-1420},"selected":false,"positionAbsolute":{"x":-4100,"y":-1420}}]},"agent_layer":[{"x":4,"y":5,"id":"67471d7f-236a-4482-8ffe-e67af7dce3ab","name":"Bobby","role":"Welcomer","color":"#8e5cb8","spriteX":19,"spriteY":1.5,"frameWidth":16,"frameHeight":26,"spritesheet":"/tilemaps/Alex16x16.png","instructions":""},{"x":4,"y":4,"id":"2fe63a84-fd29-4ed0-af8e-e8a379261f7c","name":"Summer","role":"Historian","color":"#67a6d6","spriteX":19,"spriteY":1.5,"frameWidth":16,"frameHeight":26,"spritesheet":"/tilemaps/Julie16x16.png","instructions":""},{"x":2,"y":11,"id":"9025df29-cdd2-49f7-894c-b42fb698664f","name":"Johnny","role":"AI Agent","color":"#4261c7","spriteX":19,"spriteY":1.5,"frameWidth":16,"frameHeight":26,"spritesheet":"/tilemaps/Alex16x16.png","instructions":""},{"x":13,"y":4,"id":"b5043642-7e98-4976-9407-2b0587d76376","name":"Bobby","role":"AI Agent","color":"#d12a2a","spriteX":19,"spriteY":1.5,"frameWidth":16,"frameHeight":26,"spritesheet":"/tilemaps/Bobby16x16.png","instructions":""},{"x":3,"y":4,"id":"2e81e93f-be7a-4354-bd30-dfeea5894d59","name":"Tommy","role":"","color":"#d1b82a","spriteX":19,"spriteY":1.5,"frameWidth":16,"frameHeight":26,"spritesheet":"/tilemaps/Jordan16x16.png","instructions":""}],"settings":[{"useOnlyButton":true},{"humanInTheLoop":false},{"edgeStyle":"curve"}],"characters":[{"id":"b5043642-7e98-4976-9407-2b0587d76376","name":"Bobby","role":"AI Agent","color":"#d12a2a","spriteX":19,"spriteY":1.5,"frameWidth":16,"frameHeight":26,"spritesheet":"/tilemaps/Bobby16x16.png","instructions":""},{"id":"2e81e93f-be7a-4354-bd30-dfeea5894d59","name":"Tommy","role":"","color":"#d1b82a","spriteX":19,"spriteY":1.5,"frameWidth":16,"frameHeight":26,"spritesheet":"/tilemaps/Jordan16x16.png","instructions":""}],"tilemap":[{"scheme":[[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":480,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":480,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":416,"y":128},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}],[{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32}]],"selectedSprite":{"x":480,"y":32}},{"scheme":[[{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128}],[{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128}],[{"x":416,"y":128},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},null,null,null,null,null,null,null,null,null,null,null,null,{"x":416,"y":128}],[{"x":416,"y":128},null,null,null,null,null,null,null,null,null,null,null,null,{"x":416,"y":128}],[{"x":416,"y":128},null,null,null,null,null,null,null,null,null,null,null,null,{"x":416,"y":128}],[{"x":416,"y":128},null,null,{"x":128,"y":736},{"x":128,"y":736},{"x":192,"y":0},{"x":224,"y":0},{"x":96,"y":128},{"x":128,"y":320},null,null,{"x":64,"y":32},{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},null,null,{"x":128,"y":736},{"x":128,"y":736},{"x":32,"y":160},{"x":64,"y":160},{"x":96,"y":160},{"x":128,"y":352},null,{"x":128,"y":736},{"x":64,"y":32},{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},null,null,null,{"x":128,"y":736},{"x":32,"y":160},{"x":64,"y":160},{"x":96,"y":160},{"x":128,"y":320},null,{"x":128,"y":736},null,{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},null,null,null,null,{"x":32,"y":160},{"x":64,"y":160},{"x":96,"y":160},{"x":128,"y":352},null,null,{"x":64,"y":32},{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},{"x":64,"y":32},null,null,null,{"x":32,"y":160},{"x":64,"y":160},{"x":96,"y":160},{"x":128,"y":320},{"x":64,"y":32},null,{"x":64,"y":32},{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},{"x":64,"y":32},null,null,null,{"x":32,"y":160},{"x":64,"y":160},{"x":96,"y":160},{"x":128,"y":352},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":32,"y":192},{"x":64,"y":192},{"x":96,"y":192},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":416,"y":128}],[{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128},{"x":416,"y":128}]],"selectedSprite":{"x":416,"y":128}},{"scheme":[[null,null,null,null,{"x":64,"y":736},{"x":96,"y":736},null,null,{"x":288,"y":448},{"x":320,"y":448},{"x":288,"y":384},{"x":320,"y":384},{"x":192,"y":384},null],[null,{"x":64,"y":640},{"x":96,"y":640},{"x":128,"y":640},{"x":64,"y":768},{"x":96,"y":768},{"x":0,"y":544},{"x":32,"y":544},{"x":288,"y":480},{"x":320,"y":480},{"x":288,"y":416},{"x":320,"y":416},{"x":192,"y":416},null],[null,{"x":64,"y":672},{"x":96,"y":672},{"x":128,"y":672},{"x":64,"y":800},{"x":96,"y":800},{"x":0,"y":576},{"x":32,"y":576},null,null,null,null,{"x":192,"y":448},null],[null,{"x":64,"y":704},{"x":96,"y":704},{"x":320,"y":576},null,{"x":64,"y":608},{"x":448,"y":640},{"x":480,"y":640},null,null,null,null,null,null],[null,{"x":320,"y":576},{"x":320,"y":576},null,null,null,{"x":448,"y":672},{"x":480,"y":672},null,null,null,null,null,null],[null,null,null,null,null,{"x":64,"y":32},null,null,null,null,null,null,null,null],[null,null,null,null,null,{"x":256,"y":640},{"x":288,"y":640},null,null,null,null,null,null,null],[null,null,null,null,null,{"x":256,"y":1344},{"x":288,"y":672},{"x":288,"y":1408},null,null,null,null,null,null],[null,null,null,null,null,null,null,{"x":352,"y":1408},null,null,null,null,null,null],[null,null,null,null,null,{"x":0,"y":448},null,{"x":352,"y":1440},null,null,null,null,null,null],[null,null,null,null,null,{"x":32,"y":480},null,{"x":352,"y":1472},null,null,null,null,null,null],[null,null,null,null,null,{"x":224,"y":832},{"x":256,"y":832},{"x":288,"y":832},null,null,null,null,null,null],[null,null,null,null,null,{"x":224,"y":864},{"x":256,"y":864},{"x":288,"y":864},null,null,null,null,null,null],[null,{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},{"x":64,"y":32},null]],"selectedSprite":{"x":480,"y":640}},{"scheme":[[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,{"x":384,"y":480},null],[null,{"x":192,"y":384},null,null,null,null,null,{"x":288,"y":544},null,null,null,null,{"x":384,"y":512},null],[null,{"x":192,"y":416},null,null,null,null,null,{"x":320,"y":224},null,null,null,null,{"x":384,"y":544},null],[null,{"x":192,"y":448},null,null,null,null,null,{"x":320,"y":256},null,null,null,{"x":384,"y":1280},{"x":416,"y":1280},null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,{"x":384,"y":1568},{"x":416,"y":1568},null,null,null,null,null,null,null],[null,null,null,null,null,{"x":384,"y":1600},{"x":416,"y":1600},null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null]],"selectedSprite":{"x":384,"y":544}},{"scheme":[[null,null,null,null,null,null,null,{"x":64,"y":384},null,null,null,null,null,null],[null,null,null,null,null,null,null,{"x":448,"y":224},null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,{"x":384,"y":1216},{"x":416,"y":1216},null],[null,null,null,null,null,null,null,null,null,null,null,{"x":384,"y":1248},{"x":416,"y":1248},null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,{"x":448,"y":224},{"x":448,"y":224},null],[null,null,null,null,null,null,null,null,null,null,null,{"x":448,"y":640},{"x":480,"y":640},null],[null,null,null,null,null,null,null,null,null,null,null,{"x":448,"y":672},{"x":480,"y":672},null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,{"x":0,"y":320},null,null,null,null,null,null,null],[null,null,null,null,null,null,{"x":0,"y":352},null,null,null,null,null,null,null]],"selectedSprite":{"x":448,"y":544}},{"scheme":[[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,{"x":448,"y":544},null],[null,null,null,null,null,null,null,null,null,null,null,{"x":32,"y":448},{"x":448,"y":576},null],[null,null,null,null,null,null,null,null,null,null,{"x":192,"y":768},{"x":192,"y":768},{"x":0,"y":352},null],[null,null,null,null,null,null,null,null,null,null,null,null,{"x":192,"y":800},null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null]],"selectedSprite":{"x":192,"y":800}},{"scheme":[[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,{"x":0,"y":320},null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null]],"selectedSprite":{"x":0,"y":320}}]}